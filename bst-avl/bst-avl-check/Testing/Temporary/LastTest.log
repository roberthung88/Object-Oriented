Start testing: May 03 07:17 UTC
----------------------------------------------------------
1/59 Testing: BST.ConstructionDestruction
1/59 Test: BST.ConstructionDestruction
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BST.ConstructionDestruction"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BST.ConstructionDestruction" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==115== Memcheck, a memory error detector
==115== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==115== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==115== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BST.ConstructionDestruction
==115== 
Running main() from gtest_main.cc
Note: Google Test filter = BST.ConstructionDestruction
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BST
[ RUN      ] BST.ConstructionDestruction
[       OK ] BST.ConstructionDestruction (13 ms)
[----------] 1 test from BST (25 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (72 ms total)
[  PASSED  ] 1 test.
==115== 
==115== HEAP SUMMARY:
==115==     in use at exit: 0 bytes in 0 blocks
==115==   total heap usage: 485 allocs, 485 frees, 132,415 bytes allocated
==115== 
==115== All heap blocks were freed -- no leaks are possible
==115== 
==115== For counts of detected and suppressed errors, rerun with: -v
==115== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.18 sec
----------------------------------------------------------
Test Passed.
"BST.ConstructionDestruction" end time: May 03 07:17 UTC
"BST.ConstructionDestruction" time elapsed: 00:00:01
----------------------------------------------------------

2/59 Testing: BSTInsert.JustRoot
2/59 Test: BSTInsert.JustRoot
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.JustRoot"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.JustRoot" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==116== Memcheck, a memory error detector
==116== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==116== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==116== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.JustRoot
==116== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.JustRoot
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.JustRoot
[       OK ] BSTInsert.JustRoot (41 ms)
[----------] 1 test from BSTInsert (52 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (98 ms total)
[  PASSED  ] 1 test.
==116== 
==116== HEAP SUMMARY:
==116==     in use at exit: 0 bytes in 0 blocks
==116==   total heap usage: 487 allocs, 487 frees, 132,521 bytes allocated
==116== 
==116== All heap blocks were freed -- no leaks are possible
==116== 
==116== For counts of detected and suppressed errors, rerun with: -v
==116== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.19 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.JustRoot" end time: May 03 07:17 UTC
"BSTInsert.JustRoot" time elapsed: 00:00:01
----------------------------------------------------------

3/59 Testing: BSTInsert.DoubleInsertLeft
3/59 Test: BSTInsert.DoubleInsertLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.DoubleInsertLeft"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.DoubleInsertLeft" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==117== Memcheck, a memory error detector
==117== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==117== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==117== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.DoubleInsertLeft
==117== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.DoubleInsertLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.DoubleInsertLeft
[       OK ] BSTInsert.DoubleInsertLeft (40 ms)
[----------] 1 test from BSTInsert (50 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (95 ms total)
[  PASSED  ] 1 test.
==117== 
==117== HEAP SUMMARY:
==117==     in use at exit: 0 bytes in 0 blocks
==117==   total heap usage: 489 allocs, 489 frees, 132,569 bytes allocated
==117== 
==117== All heap blocks were freed -- no leaks are possible
==117== 
==117== For counts of detected and suppressed errors, rerun with: -v
==117== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.25 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.DoubleInsertLeft" end time: May 03 07:17 UTC
"BSTInsert.DoubleInsertLeft" time elapsed: 00:00:01
----------------------------------------------------------

4/59 Testing: BSTInsert.DoubleInsertRight
4/59 Test: BSTInsert.DoubleInsertRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.DoubleInsertRight"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.DoubleInsertRight" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==118== Memcheck, a memory error detector
==118== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==118== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==118== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.DoubleInsertRight
==118== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.DoubleInsertRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.DoubleInsertRight
[       OK ] BSTInsert.DoubleInsertRight (47 ms)
[----------] 1 test from BSTInsert (59 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (106 ms total)
[  PASSED  ] 1 test.
==118== 
==118== HEAP SUMMARY:
==118==     in use at exit: 0 bytes in 0 blocks
==118==   total heap usage: 489 allocs, 489 frees, 132,575 bytes allocated
==118== 
==118== All heap blocks were freed -- no leaks are possible
==118== 
==118== For counts of detected and suppressed errors, rerun with: -v
==118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.31 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.DoubleInsertRight" end time: May 03 07:17 UTC
"BSTInsert.DoubleInsertRight" time elapsed: 00:00:01
----------------------------------------------------------

5/59 Testing: BSTInsert.InsertZigZigLeft
5/59 Test: BSTInsert.InsertZigZigLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZigLeft"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.InsertZigZigLeft" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==119== Memcheck, a memory error detector
==119== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==119== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==119== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZigLeft
==119== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZigLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZigLeft
[       OK ] BSTInsert.InsertZigZigLeft (40 ms)
[----------] 1 test from BSTInsert (51 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (100 ms total)
[  PASSED  ] 1 test.
==119== 
==119== HEAP SUMMARY:
==119==     in use at exit: 0 bytes in 0 blocks
==119==   total heap usage: 491 allocs, 491 frees, 132,649 bytes allocated
==119== 
==119== All heap blocks were freed -- no leaks are possible
==119== 
==119== For counts of detected and suppressed errors, rerun with: -v
==119== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.41 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZigLeft" end time: May 03 07:17 UTC
"BSTInsert.InsertZigZigLeft" time elapsed: 00:00:01
----------------------------------------------------------

6/59 Testing: BSTInsert.InsertZigZigRight
6/59 Test: BSTInsert.InsertZigZigRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZigRight"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.InsertZigZigRight" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==120== Memcheck, a memory error detector
==120== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==120== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==120== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZigRight
==120== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZigRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZigRight
[       OK ] BSTInsert.InsertZigZigRight (40 ms)
[----------] 1 test from BSTInsert (50 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (99 ms total)
[  PASSED  ] 1 test.
==120== 
==120== HEAP SUMMARY:
==120==     in use at exit: 0 bytes in 0 blocks
==120==   total heap usage: 491 allocs, 491 frees, 132,655 bytes allocated
==120== 
==120== All heap blocks were freed -- no leaks are possible
==120== 
==120== For counts of detected and suppressed errors, rerun with: -v
==120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.20 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZigRight" end time: May 03 07:17 UTC
"BSTInsert.InsertZigZigRight" time elapsed: 00:00:01
----------------------------------------------------------

7/59 Testing: BSTInsert.InsertZigZagLeft
7/59 Test: BSTInsert.InsertZigZagLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZagLeft"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.InsertZigZagLeft" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==121== Memcheck, a memory error detector
==121== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==121== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==121== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZagLeft
==121== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZagLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZagLeft
[       OK ] BSTInsert.InsertZigZagLeft (41 ms)
[----------] 1 test from BSTInsert (52 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (99 ms total)
[  PASSED  ] 1 test.
==121== 
==121== HEAP SUMMARY:
==121==     in use at exit: 0 bytes in 0 blocks
==121==   total heap usage: 491 allocs, 491 frees, 132,649 bytes allocated
==121== 
==121== All heap blocks were freed -- no leaks are possible
==121== 
==121== For counts of detected and suppressed errors, rerun with: -v
==121== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZagLeft" end time: May 03 07:17 UTC
"BSTInsert.InsertZigZagLeft" time elapsed: 00:00:01
----------------------------------------------------------

8/59 Testing: BSTInsert.InsertZigZagRight
8/59 Test: BSTInsert.InsertZigZagRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.InsertZigZagRight"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.InsertZigZagRight" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==122== Memcheck, a memory error detector
==122== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==122== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==122== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.InsertZigZagRight
==122== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.InsertZigZagRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.InsertZigZagRight
[       OK ] BSTInsert.InsertZigZagRight (46 ms)
[----------] 1 test from BSTInsert (58 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (166 ms total)
[  PASSED  ] 1 test.
==122== 
==122== HEAP SUMMARY:
==122==     in use at exit: 0 bytes in 0 blocks
==122==   total heap usage: 491 allocs, 491 frees, 132,655 bytes allocated
==122== 
==122== All heap blocks were freed -- no leaks are possible
==122== 
==122== For counts of detected and suppressed errors, rerun with: -v
==122== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.24 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.InsertZigZagRight" end time: May 03 07:17 UTC
"BSTInsert.InsertZigZagRight" time elapsed: 00:00:01
----------------------------------------------------------

9/59 Testing: BSTInsert.7Elements
9/59 Test: BSTInsert.7Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.7Elements"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.7Elements" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==123== Memcheck, a memory error detector
==123== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==123== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==123== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.7Elements
==123== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.7Elements
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.7Elements
[       OK ] BSTInsert.7Elements (45 ms)
[----------] 1 test from BSTInsert (55 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (100 ms total)
[  PASSED  ] 1 test.
==123== 
==123== HEAP SUMMARY:
==123==     in use at exit: 0 bytes in 0 blocks
==123==   total heap usage: 499 allocs, 499 frees, 132,927 bytes allocated
==123== 
==123== All heap blocks were freed -- no leaks are possible
==123== 
==123== For counts of detected and suppressed errors, rerun with: -v
==123== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.17 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.7Elements" end time: May 03 07:17 UTC
"BSTInsert.7Elements" time elapsed: 00:00:01
----------------------------------------------------------

10/59 Testing: BSTClear.Clear
10/59 Test: BSTClear.Clear
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTClear.Clear"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTClear.Clear" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==124== Memcheck, a memory error detector
==124== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==124== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==124== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTClear.Clear
==124== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTClear.Clear
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTClear
[ RUN      ] BSTClear.Clear
[       OK ] BSTClear.Clear (27 ms)
[----------] 1 test from BSTClear (38 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (87 ms total)
[  PASSED  ] 1 test.
==124== 
==124== HEAP SUMMARY:
==124==     in use at exit: 0 bytes in 0 blocks
==124==   total heap usage: 454 allocs, 454 frees, 131,396 bytes allocated
==124== 
==124== All heap blocks were freed -- no leaks are possible
==124== 
==124== For counts of detected and suppressed errors, rerun with: -v
==124== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.39 sec
----------------------------------------------------------
Test Passed.
"BSTClear.Clear" end time: May 03 07:17 UTC
"BSTClear.Clear" time elapsed: 00:00:01
----------------------------------------------------------

11/59 Testing: BSTFind.InvalidFind
11/59 Test: BSTFind.InvalidFind
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTFind.InvalidFind"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTFind.InvalidFind" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==125== Memcheck, a memory error detector
==125== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==125== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==125== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTFind.InvalidFind
==125== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTFind.InvalidFind
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTFind
[ RUN      ] BSTFind.InvalidFind
[       OK ] BSTFind.InvalidFind (19 ms)
[----------] 1 test from BSTFind (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (72 ms total)
[  PASSED  ] 1 test.
==125== 
==125== HEAP SUMMARY:
==125==     in use at exit: 0 bytes in 0 blocks
==125==   total heap usage: 487 allocs, 487 frees, 132,447 bytes allocated
==125== 
==125== All heap blocks were freed -- no leaks are possible
==125== 
==125== For counts of detected and suppressed errors, rerun with: -v
==125== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.33 sec
----------------------------------------------------------
Test Passed.
"BSTFind.InvalidFind" end time: May 03 07:17 UTC
"BSTFind.InvalidFind" time elapsed: 00:00:01
----------------------------------------------------------

12/59 Testing: BSTInsert.Duplicates
12/59 Test: BSTInsert.Duplicates
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Duplicates"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.Duplicates" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==126== Memcheck, a memory error detector
==126== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==126== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==126== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.Duplicates
==126== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Duplicates
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Duplicates
[       OK ] BSTInsert.Duplicates (45 ms)
[----------] 1 test from BSTInsert (56 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (103 ms total)
[  PASSED  ] 1 test.
==126== 
==126== HEAP SUMMARY:
==126==     in use at exit: 0 bytes in 0 blocks
==126==   total heap usage: 493 allocs, 493 frees, 132,693 bytes allocated
==126== 
==126== All heap blocks were freed -- no leaks are possible
==126== 
==126== For counts of detected and suppressed errors, rerun with: -v
==126== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.18 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Duplicates" end time: May 03 07:17 UTC
"BSTInsert.Duplicates" time elapsed: 00:00:01
----------------------------------------------------------

13/59 Testing: BSTInsert.BasicRandom
13/59 Test: BSTInsert.BasicRandom
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.BasicRandom"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.BasicRandom" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==127== Memcheck, a memory error detector
==127== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==127== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==127== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.BasicRandom
==127== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.BasicRandom
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.BasicRandom
[       OK ] BSTInsert.BasicRandom (63 ms)
[----------] 1 test from BSTInsert (75 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (124 ms total)
[  PASSED  ] 1 test.
==127== 
==127== HEAP SUMMARY:
==127==     in use at exit: 0 bytes in 0 blocks
==127==   total heap usage: 506 allocs, 506 frees, 133,219 bytes allocated
==127== 
==127== All heap blocks were freed -- no leaks are possible
==127== 
==127== For counts of detected and suppressed errors, rerun with: -v
==127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.20 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.BasicRandom" end time: May 03 07:17 UTC
"BSTInsert.BasicRandom" time elapsed: 00:00:01
----------------------------------------------------------

14/59 Testing: BSTInsert.Random50x30ele
14/59 Test: BSTInsert.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Random50x30ele"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.Random50x30ele" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==128== Memcheck, a memory error detector
==128== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==128== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==128== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.Random50x30ele
==128== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Random50x30ele
[       OK ] BSTInsert.Random50x30ele (302 ms)
[----------] 1 test from BSTInsert (314 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (365 ms total)
[  PASSED  ] 1 test.
==128== 
==128== HEAP SUMMARY:
==128==     in use at exit: 0 bytes in 0 blocks
==128==   total heap usage: 3,636 allocs, 3,636 frees, 262,797 bytes allocated
==128== 
==128== All heap blocks were freed -- no leaks are possible
==128== 
==128== For counts of detected and suppressed errors, rerun with: -v
==128== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.44 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Random50x30ele" end time: May 03 07:17 UTC
"BSTInsert.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

15/59 Testing: BSTInsert.Random3x5000ele
15/59 Test: BSTInsert.Random3x5000ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTInsert.Random3x5000ele"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTInsert.Random3x5000ele" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==129== Memcheck, a memory error detector
==129== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==129== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==129== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTInsert.Random3x5000ele
==129== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTInsert.Random3x5000ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTInsert
[ RUN      ] BSTInsert.Random3x5000ele
[       OK ] BSTInsert.Random3x5000ele (1325 ms)
[----------] 1 test from BSTInsert (1335 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1376 ms total)
[  PASSED  ] 1 test.
==129== 
==129== HEAP SUMMARY:
==129==     in use at exit: 0 bytes in 0 blocks
==129==   total heap usage: 30,495 allocs, 30,495 frees, 1,392,667 bytes allocated
==129== 
==129== All heap blocks were freed -- no leaks are possible
==129== 
==129== For counts of detected and suppressed errors, rerun with: -v
==129== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.44 sec
----------------------------------------------------------
Test Passed.
"BSTInsert.Random3x5000ele" end time: May 03 07:17 UTC
"BSTInsert.Random3x5000ele" time elapsed: 00:00:02
----------------------------------------------------------

16/59 Testing: BSTRemove.EmptyTree
16/59 Test: BSTRemove.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.EmptyTree"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTRemove.EmptyTree" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==130== Memcheck, a memory error detector
==130== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==130== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==130== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTRemove.EmptyTree
==130== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.EmptyTree
[       OK ] BSTRemove.EmptyTree (15 ms)
[----------] 1 test from BSTRemove (26 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (69 ms total)
[  PASSED  ] 1 test.
==130== 
==130== HEAP SUMMARY:
==130==     in use at exit: 0 bytes in 0 blocks
==130==   total heap usage: 486 allocs, 486 frees, 132,402 bytes allocated
==130== 
==130== All heap blocks were freed -- no leaks are possible
==130== 
==130== For counts of detected and suppressed errors, rerun with: -v
==130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.EmptyTree" end time: May 03 07:17 UTC
"BSTRemove.EmptyTree" time elapsed: 00:00:01
----------------------------------------------------------

17/59 Testing: BSTRemove.NodeMismatch
17/59 Test: BSTRemove.NodeMismatch
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.NodeMismatch"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTRemove.NodeMismatch" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==131== Memcheck, a memory error detector
==131== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==131== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==131== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTRemove.NodeMismatch
==131== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.NodeMismatch
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.NodeMismatch
[       OK ] BSTRemove.NodeMismatch (47 ms)
[----------] 1 test from BSTRemove (57 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (100 ms total)
[  PASSED  ] 1 test.
==131== 
==131== HEAP SUMMARY:
==131==     in use at exit: 0 bytes in 0 blocks
==131==   total heap usage: 490 allocs, 490 frees, 132,740 bytes allocated
==131== 
==131== All heap blocks were freed -- no leaks are possible
==131== 
==131== For counts of detected and suppressed errors, rerun with: -v
==131== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.NodeMismatch" end time: May 03 07:17 UTC
"BSTRemove.NodeMismatch" time elapsed: 00:00:01
----------------------------------------------------------

18/59 Testing: BSTRemove.SingleRemove
18/59 Test: BSTRemove.SingleRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.SingleRemove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTRemove.SingleRemove" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==132== Memcheck, a memory error detector
==132== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==132== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==132== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTRemove.SingleRemove
==132== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.SingleRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.SingleRemove
[       OK ] BSTRemove.SingleRemove (25 ms)
[----------] 1 test from BSTRemove (37 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (82 ms total)
[  PASSED  ] 1 test.
==132== 
==132== HEAP SUMMARY:
==132==     in use at exit: 0 bytes in 0 blocks
==132==   total heap usage: 486 allocs, 486 frees, 132,433 bytes allocated
==132== 
==132== All heap blocks were freed -- no leaks are possible
==132== 
==132== For counts of detected and suppressed errors, rerun with: -v
==132== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.SingleRemove" end time: May 03 07:17 UTC
"BSTRemove.SingleRemove" time elapsed: 00:00:01
----------------------------------------------------------

19/59 Testing: BSTRemove.RightChildRemove
19/59 Test: BSTRemove.RightChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.RightChildRemove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTRemove.RightChildRemove" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==133== Memcheck, a memory error detector
==133== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==133== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==133== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTRemove.RightChildRemove
==133== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.RightChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.RightChildRemove
[       OK ] BSTRemove.RightChildRemove (38 ms)
[----------] 1 test from BSTRemove (48 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (95 ms total)
[  PASSED  ] 1 test.
==133== 
==133== HEAP SUMMARY:
==133==     in use at exit: 0 bytes in 0 blocks
==133==   total heap usage: 490 allocs, 490 frees, 132,633 bytes allocated
==133== 
==133== All heap blocks were freed -- no leaks are possible
==133== 
==133== For counts of detected and suppressed errors, rerun with: -v
==133== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.18 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.RightChildRemove" end time: May 03 07:17 UTC
"BSTRemove.RightChildRemove" time elapsed: 00:00:01
----------------------------------------------------------

20/59 Testing: BSTRemove.LeftChildRemove
20/59 Test: BSTRemove.LeftChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.LeftChildRemove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTRemove.LeftChildRemove" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==134== Memcheck, a memory error detector
==134== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==134== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==134== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTRemove.LeftChildRemove
==134== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.LeftChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.LeftChildRemove
[       OK ] BSTRemove.LeftChildRemove (39 ms)
[----------] 1 test from BSTRemove (49 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (94 ms total)
[  PASSED  ] 1 test.
==134== 
==134== HEAP SUMMARY:
==134==     in use at exit: 0 bytes in 0 blocks
==134==   total heap usage: 490 allocs, 490 frees, 132,627 bytes allocated
==134== 
==134== All heap blocks were freed -- no leaks are possible
==134== 
==134== For counts of detected and suppressed errors, rerun with: -v
==134== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.LeftChildRemove" end time: May 03 07:17 UTC
"BSTRemove.LeftChildRemove" time elapsed: 00:00:01
----------------------------------------------------------

21/59 Testing: BSTRemove.TwoChildrenRemove_3Node
21/59 Test: BSTRemove.TwoChildrenRemove_3Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.TwoChildrenRemove_3Node"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTRemove.TwoChildrenRemove_3Node" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==135== Memcheck, a memory error detector
==135== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==135== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==135== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTRemove.TwoChildrenRemove_3Node
==135== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.TwoChildrenRemove_3Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.TwoChildrenRemove_3Node
[       OK ] BSTRemove.TwoChildrenRemove_3Node (51 ms)
[----------] 1 test from BSTRemove (62 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (104 ms total)
[  PASSED  ] 1 test.
==135== 
==135== HEAP SUMMARY:
==135==     in use at exit: 0 bytes in 0 blocks
==135==   total heap usage: 490 allocs, 490 frees, 132,774 bytes allocated
==135== 
==135== All heap blocks were freed -- no leaks are possible
==135== 
==135== For counts of detected and suppressed errors, rerun with: -v
==135== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.TwoChildrenRemove_3Node" end time: May 03 07:17 UTC
"BSTRemove.TwoChildrenRemove_3Node" time elapsed: 00:00:01
----------------------------------------------------------

22/59 Testing: BSTRemove.TwoChildrenRemove_4Node
22/59 Test: BSTRemove.TwoChildrenRemove_4Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.TwoChildrenRemove_4Node"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTRemove.TwoChildrenRemove_4Node" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==136== Memcheck, a memory error detector
==136== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==136== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==136== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTRemove.TwoChildrenRemove_4Node
==136== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.TwoChildrenRemove_4Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.TwoChildrenRemove_4Node
[       OK ] BSTRemove.TwoChildrenRemove_4Node (53 ms)
[----------] 1 test from BSTRemove (64 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (108 ms total)
[  PASSED  ] 1 test.
==136== 
==136== HEAP SUMMARY:
==136==     in use at exit: 0 bytes in 0 blocks
==136==   total heap usage: 492 allocs, 492 frees, 132,862 bytes allocated
==136== 
==136== All heap blocks were freed -- no leaks are possible
==136== 
==136== For counts of detected and suppressed errors, rerun with: -v
==136== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.TwoChildrenRemove_4Node" end time: May 03 07:17 UTC
"BSTRemove.TwoChildrenRemove_4Node" time elapsed: 00:00:01
----------------------------------------------------------

23/59 Testing: BSTRemove.Random50x30ele
23/59 Test: BSTRemove.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTRemove.Random50x30ele"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTRemove.Random50x30ele" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==137== Memcheck, a memory error detector
==137== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==137== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==137== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTRemove.Random50x30ele
==137== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTRemove.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTRemove
[ RUN      ] BSTRemove.Random50x30ele
[       OK ] BSTRemove.Random50x30ele (667 ms)
[----------] 1 test from BSTRemove (679 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (726 ms total)
[  PASSED  ] 1 test.
==137== 
==137== HEAP SUMMARY:
==137==     in use at exit: 0 bytes in 0 blocks
==137==   total heap usage: 3,736 allocs, 3,736 frees, 270,997 bytes allocated
==137== 
==137== All heap blocks were freed -- no leaks are possible
==137== 
==137== For counts of detected and suppressed errors, rerun with: -v
==137== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.78 sec
----------------------------------------------------------
Test Passed.
"BSTRemove.Random50x30ele" end time: May 03 07:17 UTC
"BSTRemove.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

24/59 Testing: BSTStress.InsertRemove
24/59 Test: BSTStress.InsertRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTStress.InsertRemove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTStress.InsertRemove" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==138== Memcheck, a memory error detector
==138== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==138== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==138== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTStress.InsertRemove
==138== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTStress.InsertRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTStress
[ RUN      ] BSTStress.InsertRemove
[       OK ] BSTStress.InsertRemove (114 ms)
[----------] 1 test from BSTStress (124 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (169 ms total)
[  PASSED  ] 1 test.
==138== 
==138== HEAP SUMMARY:
==138==     in use at exit: 0 bytes in 0 blocks
==138==   total heap usage: 749 allocs, 749 frees, 144,993 bytes allocated
==138== 
==138== All heap blocks were freed -- no leaks are possible
==138== 
==138== For counts of detected and suppressed errors, rerun with: -v
==138== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.30 sec
----------------------------------------------------------
Test Passed.
"BSTStress.InsertRemove" end time: May 03 07:17 UTC
"BSTStress.InsertRemove" time elapsed: 00:00:01
----------------------------------------------------------

25/59 Testing: BSTStress.Remove
25/59 Test: BSTStress.Remove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTStress.Remove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTStress.Remove" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==139== Memcheck, a memory error detector
==139== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==139== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==139== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTStress.Remove
==139== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTStress.Remove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTStress
[ RUN      ] BSTStress.Remove
Before any removals, tree is: 
                     [02]
           ┌─────────┘  └─────────┐                        
         [01]                    [03]
                                    └───┐            
                                       [04]
                                          └┐      
                                          [05]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (2, 8)
[03] -> (3, 0)
[04] -> (10, 0)
[05] -> (15, 0)

After removing -1 (which doesn't exist), tree is: 
                     [02]
           ┌─────────┘  └─────────┐                        
         [01]                    [03]
                                    └───┐            
                                       [04]
                                          └┐      
                                          [05]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (2, 8)
[03] -> (3, 0)
[04] -> (10, 0)
[05] -> (15, 0)

After removing 2 (the root), tree is: 
                     [01]
                        └─────────┐                        
                                 [02]
                                    └───┐            
                                       [03]
                                          └┐      
                                          [04]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (3, 0)
[03] -> (10, 0)
[04] -> (15, 0)

After removing 10, tree is: 
         [01]
            └───┐            
               [02]
                  └┐      
                  [03]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (3, 0)
[03] -> (15, 0)

After removing 1, tree is: 
   [01]
      └┐      
      [02]

Tree Placeholders:------------------
[01] -> (3, 0)
[02] -> (15, 0)

After removing 3, tree is: 
[01]

Tree Placeholders:------------------
[01] -> (15, 0)

After removing 15 (the last element), tree is: 
<empty tree>

After removing 15 (which doesn't exist), tree is: 
<empty tree>

[       OK ] BSTStress.Remove (129 ms)
[----------] 1 test from BSTStress (138 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (181 ms total)
[  PASSED  ] 1 test.
==139== 
==139== HEAP SUMMARY:
==139==     in use at exit: 0 bytes in 0 blocks
==139==   total heap usage: 576 allocs, 576 frees, 135,539 bytes allocated
==139== 
==139== All heap blocks were freed -- no leaks are possible
==139== 
==139== For counts of detected and suppressed errors, rerun with: -v
==139== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.29 sec
----------------------------------------------------------
Test Passed.
"BSTStress.Remove" end time: May 03 07:17 UTC
"BSTStress.Remove" time elapsed: 00:00:01
----------------------------------------------------------

26/59 Testing: BSTBalance.EmptyTree
26/59 Test: BSTBalance.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.EmptyTree"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTBalance.EmptyTree" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==140== Memcheck, a memory error detector
==140== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==140== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==140== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTBalance.EmptyTree
==140== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.EmptyTree
[       OK ] BSTBalance.EmptyTree (12 ms)
[----------] 1 test from BSTBalance (22 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (66 ms total)
[  PASSED  ] 1 test.
==140== 
==140== HEAP SUMMARY:
==140==     in use at exit: 0 bytes in 0 blocks
==140==   total heap usage: 485 allocs, 485 frees, 132,373 bytes allocated
==140== 
==140== All heap blocks were freed -- no leaks are possible
==140== 
==140== For counts of detected and suppressed errors, rerun with: -v
==140== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.EmptyTree" end time: May 03 07:17 UTC
"BSTBalance.EmptyTree" time elapsed: 00:00:01
----------------------------------------------------------

27/59 Testing: BSTBalance.OneNode
27/59 Test: BSTBalance.OneNode
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.OneNode"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTBalance.OneNode" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==141== Memcheck, a memory error detector
==141== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==141== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==141== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTBalance.OneNode
==141== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.OneNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.OneNode
[       OK ] BSTBalance.OneNode (13 ms)
[----------] 1 test from BSTBalance (23 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (66 ms total)
[  PASSED  ] 1 test.
==141== 
==141== HEAP SUMMARY:
==141==     in use at exit: 0 bytes in 0 blocks
==141==   total heap usage: 485 allocs, 485 frees, 132,361 bytes allocated
==141== 
==141== All heap blocks were freed -- no leaks are possible
==141== 
==141== For counts of detected and suppressed errors, rerun with: -v
==141== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.11 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.OneNode" end time: May 03 07:17 UTC
"BSTBalance.OneNode" time elapsed: 00:00:01
----------------------------------------------------------

28/59 Testing: BSTBalance.3Nodes_Unbalanced
28/59 Test: BSTBalance.3Nodes_Unbalanced
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.3Nodes_Unbalanced"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTBalance.3Nodes_Unbalanced" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==142== Memcheck, a memory error detector
==142== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==142== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==142== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTBalance.3Nodes_Unbalanced
==142== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.3Nodes_Unbalanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.3Nodes_Unbalanced
[       OK ] BSTBalance.3Nodes_Unbalanced (21 ms)
[----------] 1 test from BSTBalance (30 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (85 ms total)
[  PASSED  ] 1 test.
==142== 
==142== HEAP SUMMARY:
==142==     in use at exit: 0 bytes in 0 blocks
==142==   total heap usage: 488 allocs, 488 frees, 132,541 bytes allocated
==142== 
==142== All heap blocks were freed -- no leaks are possible
==142== 
==142== For counts of detected and suppressed errors, rerun with: -v
==142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.18 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.3Nodes_Unbalanced" end time: May 03 07:17 UTC
"BSTBalance.3Nodes_Unbalanced" time elapsed: 00:00:01
----------------------------------------------------------

29/59 Testing: BSTBalance.3Nodes_Balanced
29/59 Test: BSTBalance.3Nodes_Balanced
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.3Nodes_Balanced"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTBalance.3Nodes_Balanced" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==143== Memcheck, a memory error detector
==143== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==143== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==143== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTBalance.3Nodes_Balanced
==143== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.3Nodes_Balanced
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.3Nodes_Balanced
[       OK ] BSTBalance.3Nodes_Balanced (20 ms)
[----------] 1 test from BSTBalance (30 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (74 ms total)
[  PASSED  ] 1 test.
==143== 
==143== HEAP SUMMARY:
==143==     in use at exit: 0 bytes in 0 blocks
==143==   total heap usage: 488 allocs, 488 frees, 132,529 bytes allocated
==143== 
==143== All heap blocks were freed -- no leaks are possible
==143== 
==143== For counts of detected and suppressed errors, rerun with: -v
==143== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.18 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.3Nodes_Balanced" end time: May 03 07:17 UTC
"BSTBalance.3Nodes_Balanced" time elapsed: 00:00:01
----------------------------------------------------------

30/59 Testing: BSTBalance.UnbalancedSubtree
30/59 Test: BSTBalance.UnbalancedSubtree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.UnbalancedSubtree"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTBalance.UnbalancedSubtree" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==144== Memcheck, a memory error detector
==144== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==144== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==144== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTBalance.UnbalancedSubtree
==144== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.UnbalancedSubtree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.UnbalancedSubtree
                     [04]
           ┌─────────┘  └─────────┐                        
         [02]                    [05]
     ┌───┘  └───┐                   └───┐            
   [01]        [03]                    [06]
                                          └┐      
                                          [07]

Tree Placeholders:------------------
[01] -> (1, 9)
[02] -> (3, 159)
[03] -> (4, 4)
[04] -> (5, 8)
[05] -> (10, 90)
[06] -> (15, 11)
[07] -> (17, 159)

[       OK ] BSTBalance.UnbalancedSubtree (102 ms)
[----------] 1 test from BSTBalance (117 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (162 ms total)
[  PASSED  ] 1 test.
==144== 
==144== HEAP SUMMARY:
==144==     in use at exit: 0 bytes in 0 blocks
==144==   total heap usage: 511 allocs, 511 frees, 133,415 bytes allocated
==144== 
==144== All heap blocks were freed -- no leaks are possible
==144== 
==144== For counts of detected and suppressed errors, rerun with: -v
==144== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.26 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.UnbalancedSubtree" end time: May 03 07:17 UTC
"BSTBalance.UnbalancedSubtree" time elapsed: 00:00:01
----------------------------------------------------------

31/59 Testing: BSTBalance.Random50x30ele
31/59 Test: BSTBalance.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests" "--gtest_filter=BSTBalance.Random50x30ele"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests
"BSTBalance.Random50x30ele" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==145== Memcheck, a memory error detector
==145== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==145== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==145== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/bst_tests/bst_tests --gtest_filter=BSTBalance.Random50x30ele
==145== 
Running main() from gtest_main.cc
Note: Google Test filter = BSTBalance.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from BSTBalance
[ RUN      ] BSTBalance.Random50x30ele
[       OK ] BSTBalance.Random50x30ele (279 ms)
[----------] 1 test from BSTBalance (290 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (332 ms total)
[  PASSED  ] 1 test.
==145== 
==145== HEAP SUMMARY:
==145==     in use at exit: 0 bytes in 0 blocks
==145==   total heap usage: 3,636 allocs, 3,636 frees, 262,803 bytes allocated
==145== 
==145== All heap blocks were freed -- no leaks are possible
==145== 
==145== For counts of detected and suppressed errors, rerun with: -v
==145== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.37 sec
----------------------------------------------------------
Test Passed.
"BSTBalance.Random50x30ele" end time: May 03 07:17 UTC
"BSTBalance.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

32/59 Testing: AVLBST.ConstructionDestruction
32/59 Test: AVLBST.ConstructionDestruction
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLBST.ConstructionDestruction"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLBST.ConstructionDestruction" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==146== Memcheck, a memory error detector
==146== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==146== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==146== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLBST.ConstructionDestruction
==146== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLBST.ConstructionDestruction
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLBST
[ RUN      ] AVLBST.ConstructionDestruction
[       OK ] AVLBST.ConstructionDestruction (9 ms)
[----------] 1 test from AVLBST (19 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (62 ms total)
[  PASSED  ] 1 test.
==146== 
==146== HEAP SUMMARY:
==146==     in use at exit: 0 bytes in 0 blocks
==146==   total heap usage: 403 allocs, 403 frees, 126,701 bytes allocated
==146== 
==146== All heap blocks were freed -- no leaks are possible
==146== 
==146== For counts of detected and suppressed errors, rerun with: -v
==146== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.16 sec
----------------------------------------------------------
Test Passed.
"AVLBST.ConstructionDestruction" end time: May 03 07:17 UTC
"AVLBST.ConstructionDestruction" time elapsed: 00:00:01
----------------------------------------------------------

33/59 Testing: AVLInsert.OneNode
33/59 Test: AVLInsert.OneNode
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.OneNode"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.OneNode" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==147== Memcheck, a memory error detector
==147== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==147== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==147== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.OneNode
==147== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.OneNode
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.OneNode
[       OK ] AVLInsert.OneNode (48 ms)
[----------] 1 test from AVLInsert (62 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (110 ms total)
[  PASSED  ] 1 test.
==147== 
==147== HEAP SUMMARY:
==147==     in use at exit: 0 bytes in 0 blocks
==147==   total heap usage: 405 allocs, 405 frees, 126,791 bytes allocated
==147== 
==147== All heap blocks were freed -- no leaks are possible
==147== 
==147== For counts of detected and suppressed errors, rerun with: -v
==147== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.18 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.OneNode" end time: May 03 07:17 UTC
"AVLInsert.OneNode" time elapsed: 00:00:01
----------------------------------------------------------

34/59 Testing: AVLInsert.DoubleInsertLeft
34/59 Test: AVLInsert.DoubleInsertLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.DoubleInsertLeft"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.DoubleInsertLeft" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==148== Memcheck, a memory error detector
==148== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==148== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==148== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.DoubleInsertLeft
==148== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.DoubleInsertLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.DoubleInsertLeft
[       OK ] AVLInsert.DoubleInsertLeft (49 ms)
[----------] 1 test from AVLInsert (59 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (105 ms total)
[  PASSED  ] 1 test.
==148== 
==148== HEAP SUMMARY:
==148==     in use at exit: 0 bytes in 0 blocks
==148==   total heap usage: 407 allocs, 407 frees, 126,853 bytes allocated
==148== 
==148== All heap blocks were freed -- no leaks are possible
==148== 
==148== For counts of detected and suppressed errors, rerun with: -v
==148== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.19 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.DoubleInsertLeft" end time: May 03 07:17 UTC
"AVLInsert.DoubleInsertLeft" time elapsed: 00:00:01
----------------------------------------------------------

35/59 Testing: AVLInsert.DoubleInsertRight
35/59 Test: AVLInsert.DoubleInsertRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.DoubleInsertRight"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.DoubleInsertRight" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==149== Memcheck, a memory error detector
==149== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==149== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==149== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.DoubleInsertRight
==149== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.DoubleInsertRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.DoubleInsertRight
[       OK ] AVLInsert.DoubleInsertRight (48 ms)
[----------] 1 test from AVLInsert (57 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (102 ms total)
[  PASSED  ] 1 test.
==149== 
==149== HEAP SUMMARY:
==149==     in use at exit: 0 bytes in 0 blocks
==149==   total heap usage: 407 allocs, 407 frees, 126,859 bytes allocated
==149== 
==149== All heap blocks were freed -- no leaks are possible
==149== 
==149== For counts of detected and suppressed errors, rerun with: -v
==149== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.15 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.DoubleInsertRight" end time: May 03 07:17 UTC
"AVLInsert.DoubleInsertRight" time elapsed: 00:00:01
----------------------------------------------------------

36/59 Testing: AVLInsert.InsertZigZigLeft
36/59 Test: AVLInsert.InsertZigZigLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZigLeft"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.InsertZigZigLeft" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==150== Memcheck, a memory error detector
==150== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==150== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==150== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZigLeft
==150== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZigLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZigLeft
[       OK ] AVLInsert.InsertZigZigLeft (54 ms)
[----------] 1 test from AVLInsert (64 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (106 ms total)
[  PASSED  ] 1 test.
==150== 
==150== HEAP SUMMARY:
==150==     in use at exit: 0 bytes in 0 blocks
==150==   total heap usage: 409 allocs, 409 frees, 126,941 bytes allocated
==150== 
==150== All heap blocks were freed -- no leaks are possible
==150== 
==150== For counts of detected and suppressed errors, rerun with: -v
==150== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.14 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZigLeft" end time: May 03 07:17 UTC
"AVLInsert.InsertZigZigLeft" time elapsed: 00:00:01
----------------------------------------------------------

37/59 Testing: AVLInsert.InsertZigZigRight
37/59 Test: AVLInsert.InsertZigZigRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZigRight"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.InsertZigZigRight" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==151== Memcheck, a memory error detector
==151== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==151== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==151== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZigRight
==151== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZigRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZigRight
[       OK ] AVLInsert.InsertZigZigRight (53 ms)
[----------] 1 test from AVLInsert (63 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (105 ms total)
[  PASSED  ] 1 test.
==151== 
==151== HEAP SUMMARY:
==151==     in use at exit: 0 bytes in 0 blocks
==151==   total heap usage: 409 allocs, 409 frees, 126,947 bytes allocated
==151== 
==151== All heap blocks were freed -- no leaks are possible
==151== 
==151== For counts of detected and suppressed errors, rerun with: -v
==151== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.13 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZigRight" end time: May 03 07:17 UTC
"AVLInsert.InsertZigZigRight" time elapsed: 00:00:01
----------------------------------------------------------

38/59 Testing: AVLInsert.InsertZigZagLeft
38/59 Test: AVLInsert.InsertZigZagLeft
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZagLeft"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.InsertZigZagLeft" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==152== Memcheck, a memory error detector
==152== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==152== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==152== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZagLeft
==152== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZagLeft
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZagLeft
[       OK ] AVLInsert.InsertZigZagLeft (60 ms)
[----------] 1 test from AVLInsert (72 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (115 ms total)
[  PASSED  ] 1 test.
==152== 
==152== HEAP SUMMARY:
==152==     in use at exit: 0 bytes in 0 blocks
==152==   total heap usage: 409 allocs, 409 frees, 126,941 bytes allocated
==152== 
==152== All heap blocks were freed -- no leaks are possible
==152== 
==152== For counts of detected and suppressed errors, rerun with: -v
==152== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.18 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZagLeft" end time: May 03 07:17 UTC
"AVLInsert.InsertZigZagLeft" time elapsed: 00:00:01
----------------------------------------------------------

39/59 Testing: AVLInsert.InsertZigZagRight
39/59 Test: AVLInsert.InsertZigZagRight
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.InsertZigZagRight"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.InsertZigZagRight" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==153== Memcheck, a memory error detector
==153== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==153== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==153== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.InsertZigZagRight
==153== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.InsertZigZagRight
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.InsertZigZagRight
[       OK ] AVLInsert.InsertZigZagRight (60 ms)
[----------] 1 test from AVLInsert (69 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (115 ms total)
[  PASSED  ] 1 test.
==153== 
==153== HEAP SUMMARY:
==153==     in use at exit: 0 bytes in 0 blocks
==153==   total heap usage: 409 allocs, 409 frees, 126,947 bytes allocated
==153== 
==153== All heap blocks were freed -- no leaks are possible
==153== 
==153== For counts of detected and suppressed errors, rerun with: -v
==153== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.19 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.InsertZigZagRight" end time: May 03 07:17 UTC
"AVLInsert.InsertZigZagRight" time elapsed: 00:00:01
----------------------------------------------------------

40/59 Testing: AVLInsert.7Elements
40/59 Test: AVLInsert.7Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.7Elements"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.7Elements" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==154== Memcheck, a memory error detector
==154== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==154== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==154== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.7Elements
==154== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.7Elements
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.7Elements
[       OK ] AVLInsert.7Elements (62 ms)
[----------] 1 test from AVLInsert (72 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (115 ms total)
[  PASSED  ] 1 test.
==154== 
==154== HEAP SUMMARY:
==154==     in use at exit: 0 bytes in 0 blocks
==154==   total heap usage: 417 allocs, 417 frees, 127,251 bytes allocated
==154== 
==154== All heap blocks were freed -- no leaks are possible
==154== 
==154== For counts of detected and suppressed errors, rerun with: -v
==154== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.19 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.7Elements" end time: May 03 07:17 UTC
"AVLInsert.7Elements" time elapsed: 00:00:01
----------------------------------------------------------

41/59 Testing: AVLClear.Clear
41/59 Test: AVLClear.Clear
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLClear.Clear"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLClear.Clear" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==155== Memcheck, a memory error detector
==155== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==155== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==155== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLClear.Clear
==155== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLClear.Clear
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLClear
[ RUN      ] AVLClear.Clear
[       OK ] AVLClear.Clear (30 ms)
[----------] 1 test from AVLClear (41 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (82 ms total)
[  PASSED  ] 1 test.
==155== 
==155== HEAP SUMMARY:
==155==     in use at exit: 0 bytes in 0 blocks
==155==   total heap usage: 380 allocs, 380 frees, 125,928 bytes allocated
==155== 
==155== All heap blocks were freed -- no leaks are possible
==155== 
==155== For counts of detected and suppressed errors, rerun with: -v
==155== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"AVLClear.Clear" end time: May 03 07:17 UTC
"AVLClear.Clear" time elapsed: 00:00:01
----------------------------------------------------------

42/59 Testing: AVLInsert.Duplicates
42/59 Test: AVLInsert.Duplicates
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Duplicates"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.Duplicates" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==156== Memcheck, a memory error detector
==156== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==156== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==156== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.Duplicates
==156== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Duplicates
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Duplicates
[       OK ] AVLInsert.Duplicates (59 ms)
[----------] 1 test from AVLInsert (69 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (111 ms total)
[  PASSED  ] 1 test.
==156== 
==156== HEAP SUMMARY:
==156==     in use at exit: 0 bytes in 0 blocks
==156==   total heap usage: 411 allocs, 411 frees, 126,993 bytes allocated
==156== 
==156== All heap blocks were freed -- no leaks are possible
==156== 
==156== For counts of detected and suppressed errors, rerun with: -v
==156== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.14 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.Duplicates" end time: May 03 07:17 UTC
"AVLInsert.Duplicates" time elapsed: 00:00:01
----------------------------------------------------------

43/59 Testing: AVLInsert.Random50x30ele
43/59 Test: AVLInsert.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Random50x30ele"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.Random50x30ele" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==157== Memcheck, a memory error detector
==157== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==157== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==157== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.Random50x30ele
==157== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Random50x30ele
[       OK ] AVLInsert.Random50x30ele (358 ms)
[----------] 1 test from AVLInsert (368 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (410 ms total)
[  PASSED  ] 1 test.
==157== 
==157== HEAP SUMMARY:
==157==     in use at exit: 0 bytes in 0 blocks
==157==   total heap usage: 3,554 allocs, 3,554 frees, 269,065 bytes allocated
==157== 
==157== All heap blocks were freed -- no leaks are possible
==157== 
==157== For counts of detected and suppressed errors, rerun with: -v
==157== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.46 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.Random50x30ele" end time: May 03 07:17 UTC
"AVLInsert.Random50x30ele" time elapsed: 00:00:01
----------------------------------------------------------

44/59 Testing: AVLInsert.Random3x5000ele
44/59 Test: AVLInsert.Random3x5000ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLInsert.Random3x5000ele"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLInsert.Random3x5000ele" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==158== Memcheck, a memory error detector
==158== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==158== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==158== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLInsert.Random3x5000ele
==158== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLInsert.Random3x5000ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLInsert
[ RUN      ] AVLInsert.Random3x5000ele
[       OK ] AVLInsert.Random3x5000ele (130 ms)
[----------] 1 test from AVLInsert (139 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (189 ms total)
[  PASSED  ] 1 test.
==158== 
==158== HEAP SUMMARY:
==158==     in use at exit: 0 bytes in 0 blocks
==158==   total heap usage: 713 allocs, 713 frees, 140,735 bytes allocated
==158== 
==158== All heap blocks were freed -- no leaks are possible
==158== 
==158== For counts of detected and suppressed errors, rerun with: -v
==158== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.27 sec
----------------------------------------------------------
Test Passed.
"AVLInsert.Random3x5000ele" end time: May 03 07:17 UTC
"AVLInsert.Random3x5000ele" time elapsed: 00:00:01
----------------------------------------------------------

45/59 Testing: AVLRemove.EmptyTree
45/59 Test: AVLRemove.EmptyTree
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.EmptyTree"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRemove.EmptyTree" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==159== Memcheck, a memory error detector
==159== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==159== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==159== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLRemove.EmptyTree
==159== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.EmptyTree
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.EmptyTree
[       OK ] AVLRemove.EmptyTree (25 ms)
[----------] 1 test from AVLRemove (35 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (78 ms total)
[  PASSED  ] 1 test.
==159== 
==159== HEAP SUMMARY:
==159==     in use at exit: 0 bytes in 0 blocks
==159==   total heap usage: 404 allocs, 404 frees, 126,670 bytes allocated
==159== 
==159== All heap blocks were freed -- no leaks are possible
==159== 
==159== For counts of detected and suppressed errors, rerun with: -v
==159== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.EmptyTree" end time: May 03 07:17 UTC
"AVLRemove.EmptyTree" time elapsed: 00:00:01
----------------------------------------------------------

46/59 Testing: AVLRemove.NodeMismatch
46/59 Test: AVLRemove.NodeMismatch
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.NodeMismatch"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRemove.NodeMismatch" start time: May 03 07:17 UTC
Output:
----------------------------------------------------------
==160== Memcheck, a memory error detector
==160== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==160== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==160== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLRemove.NodeMismatch
==160== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.NodeMismatch
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.NodeMismatch
[       OK ] AVLRemove.NodeMismatch (52 ms)
[----------] 1 test from AVLRemove (62 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (106 ms total)
[  PASSED  ] 1 test.
==160== 
==160== HEAP SUMMARY:
==160==     in use at exit: 0 bytes in 0 blocks
==160==   total heap usage: 408 allocs, 408 frees, 127,024 bytes allocated
==160== 
==160== All heap blocks were freed -- no leaks are possible
==160== 
==160== For counts of detected and suppressed errors, rerun with: -v
==160== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.14 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.NodeMismatch" end time: May 03 07:18 UTC
"AVLRemove.NodeMismatch" time elapsed: 00:00:01
----------------------------------------------------------

47/59 Testing: AVLRemove.SingleRemove
47/59 Test: AVLRemove.SingleRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.SingleRemove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRemove.SingleRemove" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
==161== Memcheck, a memory error detector
==161== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==161== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==161== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLRemove.SingleRemove
==161== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.SingleRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.SingleRemove
[       OK ] AVLRemove.SingleRemove (25 ms)
[----------] 1 test from AVLRemove (35 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (77 ms total)
[  PASSED  ] 1 test.
==161== 
==161== HEAP SUMMARY:
==161==     in use at exit: 0 bytes in 0 blocks
==161==   total heap usage: 404 allocs, 404 frees, 126,709 bytes allocated
==161== 
==161== All heap blocks were freed -- no leaks are possible
==161== 
==161== For counts of detected and suppressed errors, rerun with: -v
==161== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.11 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.SingleRemove" end time: May 03 07:18 UTC
"AVLRemove.SingleRemove" time elapsed: 00:00:01
----------------------------------------------------------

48/59 Testing: AVLRemove.RightChildRemove
48/59 Test: AVLRemove.RightChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.RightChildRemove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRemove.RightChildRemove" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
==162== Memcheck, a memory error detector
==162== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==162== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==162== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLRemove.RightChildRemove
==162== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.RightChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.RightChildRemove
[       OK ] AVLRemove.RightChildRemove (54 ms)
[----------] 1 test from AVLRemove (67 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (120 ms total)
[  PASSED  ] 1 test.
==162== 
==162== HEAP SUMMARY:
==162==     in use at exit: 0 bytes in 0 blocks
==162==   total heap usage: 408 allocs, 408 frees, 126,925 bytes allocated
==162== 
==162== All heap blocks were freed -- no leaks are possible
==162== 
==162== For counts of detected and suppressed errors, rerun with: -v
==162== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.19 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.RightChildRemove" end time: May 03 07:18 UTC
"AVLRemove.RightChildRemove" time elapsed: 00:00:01
----------------------------------------------------------

49/59 Testing: AVLRemove.LeftChildRemove
49/59 Test: AVLRemove.LeftChildRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.LeftChildRemove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRemove.LeftChildRemove" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
==163== Memcheck, a memory error detector
==163== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==163== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==163== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLRemove.LeftChildRemove
==163== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.LeftChildRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.LeftChildRemove
[       OK ] AVLRemove.LeftChildRemove (59 ms)
[----------] 1 test from AVLRemove (70 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (114 ms total)
[  PASSED  ] 1 test.
==163== 
==163== HEAP SUMMARY:
==163==     in use at exit: 0 bytes in 0 blocks
==163==   total heap usage: 408 allocs, 408 frees, 126,919 bytes allocated
==163== 
==163== All heap blocks were freed -- no leaks are possible
==163== 
==163== For counts of detected and suppressed errors, rerun with: -v
==163== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.12 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.LeftChildRemove" end time: May 03 07:18 UTC
"AVLRemove.LeftChildRemove" time elapsed: 00:00:01
----------------------------------------------------------

50/59 Testing: AVLRemove.TwoChildrenRemove_3Node
50/59 Test: AVLRemove.TwoChildrenRemove_3Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.TwoChildrenRemove_3Node"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRemove.TwoChildrenRemove_3Node" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
==164== Memcheck, a memory error detector
==164== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==164== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==164== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLRemove.TwoChildrenRemove_3Node
==164== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.TwoChildrenRemove_3Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.TwoChildrenRemove_3Node
[       OK ] AVLRemove.TwoChildrenRemove_3Node (61 ms)
[----------] 1 test from AVLRemove (70 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (112 ms total)
[  PASSED  ] 1 test.
==164== 
==164== HEAP SUMMARY:
==164==     in use at exit: 0 bytes in 0 blocks
==164==   total heap usage: 408 allocs, 408 frees, 127,042 bytes allocated
==164== 
==164== All heap blocks were freed -- no leaks are possible
==164== 
==164== For counts of detected and suppressed errors, rerun with: -v
==164== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.14 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.TwoChildrenRemove_3Node" end time: May 03 07:18 UTC
"AVLRemove.TwoChildrenRemove_3Node" time elapsed: 00:00:01
----------------------------------------------------------

51/59 Testing: AVLRemove.TwoChildrenRemove_4Node
51/59 Test: AVLRemove.TwoChildrenRemove_4Node
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.TwoChildrenRemove_4Node"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRemove.TwoChildrenRemove_4Node" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
==165== Memcheck, a memory error detector
==165== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==165== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==165== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLRemove.TwoChildrenRemove_4Node
==165== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.TwoChildrenRemove_4Node
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.TwoChildrenRemove_4Node
[       OK ] AVLRemove.TwoChildrenRemove_4Node (70 ms)
[----------] 1 test from AVLRemove (80 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (122 ms total)
[  PASSED  ] 1 test.
==165== 
==165== HEAP SUMMARY:
==165==     in use at exit: 0 bytes in 0 blocks
==165==   total heap usage: 410 allocs, 410 frees, 127,138 bytes allocated
==165== 
==165== All heap blocks were freed -- no leaks are possible
==165== 
==165== For counts of detected and suppressed errors, rerun with: -v
==165== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.14 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.TwoChildrenRemove_4Node" end time: May 03 07:18 UTC
"AVLRemove.TwoChildrenRemove_4Node" time elapsed: 00:00:01
----------------------------------------------------------

52/59 Testing: AVLRemove.Random50x30ele
52/59 Test: AVLRemove.Random50x30ele
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLRemove.Random50x30ele"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRemove.Random50x30ele" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
==166== Memcheck, a memory error detector
==166== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==166== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==166== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLRemove.Random50x30ele
==166== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLRemove.Random50x30ele
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRemove
[ RUN      ] AVLRemove.Random50x30ele
[       OK ] AVLRemove.Random50x30ele (1018 ms)
[----------] 1 test from AVLRemove (1028 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1070 ms total)
[  PASSED  ] 1 test.
==166== 
==166== HEAP SUMMARY:
==166==     in use at exit: 0 bytes in 0 blocks
==166==   total heap usage: 3,654 allocs, 3,654 frees, 277,265 bytes allocated
==166== 
==166== All heap blocks were freed -- no leaks are possible
==166== 
==166== For counts of detected and suppressed errors, rerun with: -v
==166== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.09 sec
----------------------------------------------------------
Test Passed.
"AVLRemove.Random50x30ele" end time: May 03 07:18 UTC
"AVLRemove.Random50x30ele" time elapsed: 00:00:02
----------------------------------------------------------

53/59 Testing: AVLStress.InsertRemove
53/59 Test: AVLStress.InsertRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLStress.InsertRemove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLStress.InsertRemove" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
==167== Memcheck, a memory error detector
==167== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==167== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==167== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLStress.InsertRemove
==167== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLStress.InsertRemove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLStress
[ RUN      ] AVLStress.InsertRemove
[       OK ] AVLStress.InsertRemove (176 ms)
[----------] 1 test from AVLStress (186 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (239 ms total)
[  PASSED  ] 1 test.
==167== 
==167== HEAP SUMMARY:
==167==     in use at exit: 0 bytes in 0 blocks
==167==   total heap usage: 667 allocs, 667 frees, 139,773 bytes allocated
==167== 
==167== All heap blocks were freed -- no leaks are possible
==167== 
==167== For counts of detected and suppressed errors, rerun with: -v
==167== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.31 sec
----------------------------------------------------------
Test Passed.
"AVLStress.InsertRemove" end time: May 03 07:18 UTC
"AVLStress.InsertRemove" time elapsed: 00:00:01
----------------------------------------------------------

54/59 Testing: AVLStress.Remove
54/59 Test: AVLStress.Remove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "--error-exitcode=113" "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests" "--gtest_filter=AVLStress.Remove"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLStress.Remove" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
==168== Memcheck, a memory error detector
==168== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==168== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==168== Command: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_tests --gtest_filter=AVLStress.Remove
==168== 
Running main() from gtest_main.cc
Note: Google Test filter = AVLStress.Remove
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLStress
[ RUN      ] AVLStress.Remove
Before any removals, tree is: 
         [02]
     ┌───┘  └───┐            
   [01]        [04]
              ┌┘  └┐      
            [03]  [05]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (2, 8)
[03] -> (3, 0)
[04] -> (10, 0)
[05] -> (15, 0)

After removing -1 (which doesn't exist), tree is: 
         [02]
     ┌───┘  └───┐            
   [01]        [04]
              ┌┘  └┐      
            [03]  [05]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (2, 8)
[03] -> (3, 0)
[04] -> (10, 0)
[05] -> (15, 0)

After removing 2 (the root), tree is: 
         [03]
     ┌───┘  └───┐            
   [01]        [04]
      └┐                  
      [02]            

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (3, 0)
[03] -> (10, 0)
[04] -> (15, 0)

After removing 10, tree is: 
   [02]
  ┌┘  └┐      
[01]  [03]

Tree Placeholders:------------------
[01] -> (1, -50)
[02] -> (3, 0)
[03] -> (15, 0)

After removing 1, tree is: 
   [01]
      └┐      
      [02]

Tree Placeholders:------------------
[01] -> (3, 0)
[02] -> (15, 0)

After removing 3, tree is: 
[01]

Tree Placeholders:------------------
[01] -> (15, 0)

After removing 15 (the last element), tree is: 
<empty tree>

After removing 15 (which doesn't exist), tree is: 
<empty tree>

[       OK ] AVLStress.Remove (142 ms)
[----------] 1 test from AVLStress (153 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (194 ms total)
[  PASSED  ] 1 test.
==168== 
==168== HEAP SUMMARY:
==168==     in use at exit: 0 bytes in 0 blocks
==168==   total heap usage: 477 allocs, 477 frees, 128,977 bytes allocated
==168== 
==168== All heap blocks were freed -- no leaks are possible
==168== 
==168== For counts of detected and suppressed errors, rerun with: -v
==168== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.22 sec
----------------------------------------------------------
Test Passed.
"AVLStress.Remove" end time: May 03 07:18 UTC
"AVLStress.Remove" time elapsed: 00:00:01
----------------------------------------------------------

55/59 Testing: AVLRuntime.InsertAscending
55/59 Test: AVLRuntime.InsertAscending
Command: "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_runtime_tests" "--gtest_filter=AVLRuntime.InsertAscending"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRuntime.InsertAscending" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = AVLRuntime.InsertAscending
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRuntime
[ RUN      ] AVLRuntime.InsertAscending
>> Evaluating runtime of AVLTree::insert() with keys in ascending order
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^15 (32768) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.0467) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (2.0855) is >= threshold (1.4000)
>> Time complexity of AVLTree::insert() with keys in ascending order is likely constant
Testing if time complexity could be logarithmic...
Correlation factor (0.0125) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.3338) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0233) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0142) is < threshold (1.4000)
[       OK ] AVLRuntime.InsertAscending (575 ms)
[----------] 1 test from AVLRuntime (575 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (576 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.61 sec
----------------------------------------------------------
Test Passed.
"AVLRuntime.InsertAscending" end time: May 03 07:18 UTC
"AVLRuntime.InsertAscending" time elapsed: 00:00:00
----------------------------------------------------------

56/59 Testing: AVLRuntime.InsertDescending
56/59 Test: AVLRuntime.InsertDescending
Command: "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_runtime_tests" "--gtest_filter=AVLRuntime.InsertDescending"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRuntime.InsertDescending" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = AVLRuntime.InsertDescending
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRuntime
[ RUN      ] AVLRuntime.InsertDescending
>> Evaluating runtime of AVLTree::insert() with keys in descending order
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^15 (32768) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.1175) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (1.7234) is >= threshold (1.4000)
>> Time complexity of AVLTree::insert() with keys in descending order is likely constant
Testing if time complexity could be logarithmic...
Correlation factor (0.5366) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.3525) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0535) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0326) is < threshold (1.4000)
[       OK ] AVLRuntime.InsertDescending (650 ms)
[----------] 1 test from AVLRuntime (650 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (650 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.66 sec
----------------------------------------------------------
Test Passed.
"AVLRuntime.InsertDescending" end time: May 03 07:18 UTC
"AVLRuntime.InsertDescending" time elapsed: 00:00:00
----------------------------------------------------------

57/59 Testing: AVLRuntime.InsertRandom
57/59 Test: AVLRuntime.InsertRandom
Command: "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_runtime_tests" "--gtest_filter=AVLRuntime.InsertRandom"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRuntime.InsertRandom" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = AVLRuntime.InsertRandom
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRuntime
[ RUN      ] AVLRuntime.InsertRandom
>> Evaluating runtime of AVLTree::insert() with keys in random order
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^15 (32768) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.1837) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (1.1995) is < threshold (1.4000)
Testing if time complexity could be logarithmic...
Correlation factor (0.7071) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.2815) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0761) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0476) is < threshold (1.4000)
/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_runtime_tests.cpp:94: Failure
Value of: runtimeEvaluator.meetsComplexity(RuntimeEvaluator::TimeComplexity::LOGARITHMIC)
  Actual: false
Expected: true
[  FAILED  ] AVLRuntime.InsertRandom (3711 ms)
[----------] 1 test from AVLRuntime (3711 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (3711 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] AVLRuntime.InsertRandom

 1 FAILED TEST
<end of output>
Test time =   3.73 sec
----------------------------------------------------------
Test Failed.
"AVLRuntime.InsertRandom" end time: May 03 07:18 UTC
"AVLRuntime.InsertRandom" time elapsed: 00:00:03
----------------------------------------------------------

58/59 Testing: AVLRuntime.RemoveMin
58/59 Test: AVLRuntime.RemoveMin
Command: "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_runtime_tests" "--gtest_filter=AVLRuntime.RemoveMin"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRuntime.RemoveMin" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = AVLRuntime.RemoveMin
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRuntime
[ RUN      ] AVLRuntime.RemoveMin
>> Evaluating runtime of AVLTree::remove() on min element
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^15 (32768) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.2610) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (1.7160) is >= threshold (1.4000)
>> Time complexity of AVLTree::remove() on min element is likely constant
Testing if time complexity could be logarithmic...
Correlation factor (0.7535) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.3264) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.1037) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0650) is < threshold (1.4000)
[       OK ] AVLRuntime.RemoveMin (627 ms)
[----------] 1 test from AVLRuntime (628 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (628 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.64 sec
----------------------------------------------------------
Test Passed.
"AVLRuntime.RemoveMin" end time: May 03 07:18 UTC
"AVLRuntime.RemoveMin" time elapsed: 00:00:00
----------------------------------------------------------

59/59 Testing: AVLRuntime.RemoveMax
59/59 Test: AVLRuntime.RemoveMax
Command: "/work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests/avl_runtime_tests" "--gtest_filter=AVLRuntime.RemoveMax"
Directory: /work/hw-juipohun/hw6/bst-avl/bst-avl-check/avl_tests
"AVLRuntime.RemoveMax" start time: May 03 07:18 UTC
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = AVLRuntime.RemoveMax
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from AVLRuntime
[ RUN      ] AVLRuntime.RemoveMax
>> Evaluating runtime of AVLTree::remove() on max element
Testing with 2^0 (1) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^1 (2) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^2 (4) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^3 (8) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^4 (16) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^5 (32) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^6 (64) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^7 (128) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^8 (256) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^9 (512) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^10 (1024) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^11 (2048) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^12 (4096) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^13 (8192) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^14 (16384) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing with 2^15 (32768) elements (trial 1/30)2/30)3/30)4/30)5/30)6/30)7/30)8/30)9/30)10/30)11/30)12/30)13/30)14/30)15/30)16/30)17/30)18/30)19/30)20/30)21/30)22/30)23/30)24/30)25/30)26/30)27/30)28/30)29/30)30/30)
Testing if time complexity could be linear...
Correlation factor (0.1937) is < threshold (1.4000)
Testing if time complexity could be constant...
Correlation factor (1.5961) is >= threshold (1.4000)
>> Time complexity of AVLTree::remove() on max element is likely constant
Testing if time complexity could be logarithmic...
Correlation factor (0.6254) is < threshold (1.4000)
Testing if time complexity could be linearithmic...
Correlation factor (-0.3584) is < threshold (1.4000)
Testing if time complexity could be quadratic...
Correlation factor (0.0782) is < threshold (1.4000)
Testing if time complexity could be cubic...
Correlation factor (0.0501) is < threshold (1.4000)
[       OK ] AVLRuntime.RemoveMax (618 ms)
[----------] 1 test from AVLRuntime (619 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (619 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.63 sec
----------------------------------------------------------
Test Passed.
"AVLRuntime.RemoveMax" end time: May 03 07:18 UTC
"AVLRuntime.RemoveMax" time elapsed: 00:00:00
----------------------------------------------------------

End testing: May 03 07:18 UTC
